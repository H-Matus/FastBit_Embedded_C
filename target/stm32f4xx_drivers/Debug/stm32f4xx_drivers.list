
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004d8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000680  08000688  00010688  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000680  08000680  00010688  2**0
                  CONTENTS
  4 .ARM          00000000  08000680  08000680  00010688  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000680  08000688  00010688  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000680  08000680  00010680  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000684  08000684  00010684  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010688  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000688  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000688  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010688  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007cb  00000000  00000000  000106b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001d6  00000000  00000000  00010e83  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b0  00000000  00000000  00011060  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000088  00000000  00000000  00011110  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001334  00000000  00000000  00011198  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000a0a  00000000  00000000  000124cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000052c0  00000000  00000000  00012ed6  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018196  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001fc  00000000  00000000  00018214  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000668 	.word	0x08000668

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000668 	.word	0x08000668

080001e8 <main>:
 */

#include "stm32f407xx.h"

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOD;
 80001ee:	4b11      	ldr	r3, [pc, #68]	; (8000234 <main+0x4c>)
 80001f0:	603b      	str	r3, [r7, #0]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80001f2:	230c      	movs	r3, #12
 80001f4:	713b      	strb	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	717b      	strb	r3, [r7, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001fa:	2302      	movs	r3, #2
 80001fc:	71bb      	strb	r3, [r7, #6]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 80001fe:	2301      	movs	r3, #1
 8000200:	71fb      	strb	r3, [r7, #7]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 8000202:	2301      	movs	r3, #1
 8000204:	723b      	strb	r3, [r7, #8]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	480a      	ldr	r0, [pc, #40]	; (8000234 <main+0x4c>)
 800020a:	f000 f841 	bl	8000290 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800020e:	463b      	mov	r3, r7
 8000210:	4618      	mov	r0, r3
 8000212:	f000 f925 	bl	8000460 <GPIO_Init>

	for(;;)
	{
		GPIO_ToggleOutputPin(GPIOD, 12);
 8000216:	210c      	movs	r1, #12
 8000218:	4806      	ldr	r0, [pc, #24]	; (8000234 <main+0x4c>)
 800021a:	f000 f9ec 	bl	80005f6 <GPIO_ToggleOutputPin>

		for(int i = 0; i < 500000; i++)
 800021e:	2300      	movs	r3, #0
 8000220:	60fb      	str	r3, [r7, #12]
 8000222:	e002      	b.n	800022a <main+0x42>
 8000224:	68fb      	ldr	r3, [r7, #12]
 8000226:	3301      	adds	r3, #1
 8000228:	60fb      	str	r3, [r7, #12]
 800022a:	68fb      	ldr	r3, [r7, #12]
 800022c:	4a02      	ldr	r2, [pc, #8]	; (8000238 <main+0x50>)
 800022e:	4293      	cmp	r3, r2
 8000230:	ddf8      	ble.n	8000224 <main+0x3c>
		GPIO_ToggleOutputPin(GPIOD, 12);
 8000232:	e7f0      	b.n	8000216 <main+0x2e>
 8000234:	40020c00 	.word	0x40020c00
 8000238:	0007a11f 	.word	0x0007a11f

0800023c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800023c:	480d      	ldr	r0, [pc, #52]	; (8000274 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 8000240:	480d      	ldr	r0, [pc, #52]	; (8000278 <LoopForever+0x6>)
  ldr r1, =_edata
 8000242:	490e      	ldr	r1, [pc, #56]	; (800027c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000244:	4a0e      	ldr	r2, [pc, #56]	; (8000280 <LoopForever+0xe>)
  movs r3, #0
 8000246:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000248:	e002      	b.n	8000250 <LoopCopyDataInit>

0800024a <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 800024a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800024c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800024e:	3304      	adds	r3, #4

08000250 <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 8000250:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000252:	428c      	cmp	r4, r1



  bcc CopyDataInit
 8000254:	d3f9      	bcc.n	800024a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000256:	4a0b      	ldr	r2, [pc, #44]	; (8000284 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000258:	4c0b      	ldr	r4, [pc, #44]	; (8000288 <LoopForever+0x16>)
  movs r3, #0
 800025a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800025c:	e001      	b.n	8000262 <LoopFillZerobss>

0800025e <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 800025e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000260:	3204      	adds	r2, #4

08000262 <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 8000262:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000264:	d3fb      	bcc.n	800025e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000266:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800026a:	f000 f9d9 	bl	8000620 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026e:	f7ff ffbb 	bl	80001e8 <main>

08000272 <LoopForever>:

LoopForever:
    b LoopForever
 8000272:	e7fe      	b.n	8000272 <LoopForever>
  ldr   r0, =_estack
 8000274:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000278:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800027c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000280:	08000688 	.word	0x08000688
  ldr r2, =_sbss
 8000284:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000288:	2000001c 	.word	0x2000001c

0800028c <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800028c:	e7fe      	b.n	800028c <ADC_IRQHandler>
	...

08000290 <GPIO_PeriClockControl>:
/* APIs that are supported by this driver */
/*
    Peripheral Clock Setup
*/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	460b      	mov	r3, r1
 800029a:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE)
 800029c:	78fb      	ldrb	r3, [r7, #3]
 800029e:	2b01      	cmp	r3, #1
 80002a0:	d162      	bne.n	8000368 <GPIO_PeriClockControl+0xd8>
    {
        if(pGPIOx == GPIOA)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a64      	ldr	r2, [pc, #400]	; (8000438 <GPIO_PeriClockControl+0x1a8>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d106      	bne.n	80002b8 <GPIO_PeriClockControl+0x28>
        {
            GPIOA_PCLK_EN();
 80002aa:	4b64      	ldr	r3, [pc, #400]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ae:	4a63      	ldr	r2, [pc, #396]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002b0:	f043 0301 	orr.w	r3, r3, #1
 80002b4:	6313      	str	r3, [r2, #48]	; 0x30
        else if(pGPIOx == GPIOI)
        {
            GPIOI_PCLK_EN();
        }
    }
}
 80002b6:	e0b9      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOB)
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	4a61      	ldr	r2, [pc, #388]	; (8000440 <GPIO_PeriClockControl+0x1b0>)
 80002bc:	4293      	cmp	r3, r2
 80002be:	d106      	bne.n	80002ce <GPIO_PeriClockControl+0x3e>
            GPIOB_PCLK_EN();
 80002c0:	4b5e      	ldr	r3, [pc, #376]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c4:	4a5d      	ldr	r2, [pc, #372]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002c6:	f043 0302 	orr.w	r3, r3, #2
 80002ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002cc:	e0ae      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOC)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4a5c      	ldr	r2, [pc, #368]	; (8000444 <GPIO_PeriClockControl+0x1b4>)
 80002d2:	4293      	cmp	r3, r2
 80002d4:	d106      	bne.n	80002e4 <GPIO_PeriClockControl+0x54>
            GPIOC_PCLK_EN();
 80002d6:	4b59      	ldr	r3, [pc, #356]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002da:	4a58      	ldr	r2, [pc, #352]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002dc:	f043 0304 	orr.w	r3, r3, #4
 80002e0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e2:	e0a3      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOD)
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4a58      	ldr	r2, [pc, #352]	; (8000448 <GPIO_PeriClockControl+0x1b8>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d106      	bne.n	80002fa <GPIO_PeriClockControl+0x6a>
            GPIOD_PCLK_EN();
 80002ec:	4b53      	ldr	r3, [pc, #332]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f0:	4a52      	ldr	r2, [pc, #328]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80002f2:	f043 0308 	orr.w	r3, r3, #8
 80002f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f8:	e098      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOE)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a53      	ldr	r2, [pc, #332]	; (800044c <GPIO_PeriClockControl+0x1bc>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d106      	bne.n	8000310 <GPIO_PeriClockControl+0x80>
            GPIOE_PCLK_EN();
 8000302:	4b4e      	ldr	r3, [pc, #312]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000306:	4a4d      	ldr	r2, [pc, #308]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000308:	f043 0310 	orr.w	r3, r3, #16
 800030c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030e:	e08d      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOF)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a4f      	ldr	r2, [pc, #316]	; (8000450 <GPIO_PeriClockControl+0x1c0>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d106      	bne.n	8000326 <GPIO_PeriClockControl+0x96>
            GPIOF_PCLK_EN();
 8000318:	4b48      	ldr	r3, [pc, #288]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 800031a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031c:	4a47      	ldr	r2, [pc, #284]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 800031e:	f043 0320 	orr.w	r3, r3, #32
 8000322:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000324:	e082      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOG)
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a4a      	ldr	r2, [pc, #296]	; (8000454 <GPIO_PeriClockControl+0x1c4>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d106      	bne.n	800033c <GPIO_PeriClockControl+0xac>
            GPIOG_PCLK_EN();
 800032e:	4b43      	ldr	r3, [pc, #268]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000332:	4a42      	ldr	r2, [pc, #264]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000334:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000338:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033a:	e077      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOH)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a46      	ldr	r2, [pc, #280]	; (8000458 <GPIO_PeriClockControl+0x1c8>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0xc2>
            GPIOH_PCLK_EN();
 8000344:	4b3d      	ldr	r3, [pc, #244]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000348:	4a3c      	ldr	r2, [pc, #240]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 800034a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800034e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000350:	e06c      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOI)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a41      	ldr	r2, [pc, #260]	; (800045c <GPIO_PeriClockControl+0x1cc>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d168      	bne.n	800042c <GPIO_PeriClockControl+0x19c>
            GPIOI_PCLK_EN();
 800035a:	4b38      	ldr	r3, [pc, #224]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a37      	ldr	r2, [pc, #220]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000360:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000366:	e061      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        if(pGPIOx == GPIOA)
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a33      	ldr	r2, [pc, #204]	; (8000438 <GPIO_PeriClockControl+0x1a8>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PeriClockControl+0xee>
            GPIOA_PCLK_EN();
 8000370:	4b32      	ldr	r3, [pc, #200]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000374:	4a31      	ldr	r2, [pc, #196]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000376:	f043 0301 	orr.w	r3, r3, #1
 800037a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037c:	e056      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOB)
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a2f      	ldr	r2, [pc, #188]	; (8000440 <GPIO_PeriClockControl+0x1b0>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PeriClockControl+0x104>
            GPIOB_PCLK_EN();
 8000386:	4b2d      	ldr	r3, [pc, #180]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038a:	4a2c      	ldr	r2, [pc, #176]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 800038c:	f043 0302 	orr.w	r3, r3, #2
 8000390:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000392:	e04b      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOC)
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a2b      	ldr	r2, [pc, #172]	; (8000444 <GPIO_PeriClockControl+0x1b4>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d106      	bne.n	80003aa <GPIO_PeriClockControl+0x11a>
            GPIOC_PCLK_EN();
 800039c:	4b27      	ldr	r3, [pc, #156]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 800039e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a0:	4a26      	ldr	r2, [pc, #152]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003a2:	f043 0304 	orr.w	r3, r3, #4
 80003a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a8:	e040      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOD)
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a26      	ldr	r2, [pc, #152]	; (8000448 <GPIO_PeriClockControl+0x1b8>)
 80003ae:	4293      	cmp	r3, r2
 80003b0:	d106      	bne.n	80003c0 <GPIO_PeriClockControl+0x130>
            GPIOD_PCLK_EN();
 80003b2:	4b22      	ldr	r3, [pc, #136]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b6:	4a21      	ldr	r2, [pc, #132]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003b8:	f043 0308 	orr.w	r3, r3, #8
 80003bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003be:	e035      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOE)
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	4a22      	ldr	r2, [pc, #136]	; (800044c <GPIO_PeriClockControl+0x1bc>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d106      	bne.n	80003d6 <GPIO_PeriClockControl+0x146>
            GPIOE_PCLK_EN();
 80003c8:	4b1c      	ldr	r3, [pc, #112]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003cc:	4a1b      	ldr	r2, [pc, #108]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003ce:	f043 0310 	orr.w	r3, r3, #16
 80003d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d4:	e02a      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOF)
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4a1d      	ldr	r2, [pc, #116]	; (8000450 <GPIO_PeriClockControl+0x1c0>)
 80003da:	4293      	cmp	r3, r2
 80003dc:	d106      	bne.n	80003ec <GPIO_PeriClockControl+0x15c>
            GPIOF_PCLK_EN();
 80003de:	4b17      	ldr	r3, [pc, #92]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e2:	4a16      	ldr	r2, [pc, #88]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003e4:	f043 0320 	orr.w	r3, r3, #32
 80003e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ea:	e01f      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOG)
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4a19      	ldr	r2, [pc, #100]	; (8000454 <GPIO_PeriClockControl+0x1c4>)
 80003f0:	4293      	cmp	r3, r2
 80003f2:	d106      	bne.n	8000402 <GPIO_PeriClockControl+0x172>
            GPIOG_PCLK_EN();
 80003f4:	4b11      	ldr	r3, [pc, #68]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f8:	4a10      	ldr	r2, [pc, #64]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 80003fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000400:	e014      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOH)
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4a14      	ldr	r2, [pc, #80]	; (8000458 <GPIO_PeriClockControl+0x1c8>)
 8000406:	4293      	cmp	r3, r2
 8000408:	d106      	bne.n	8000418 <GPIO_PeriClockControl+0x188>
            GPIOH_PCLK_EN();
 800040a:	4b0c      	ldr	r3, [pc, #48]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 800040c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040e:	4a0b      	ldr	r2, [pc, #44]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000410:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000414:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000416:	e009      	b.n	800042c <GPIO_PeriClockControl+0x19c>
        else if(pGPIOx == GPIOI)
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	4a10      	ldr	r2, [pc, #64]	; (800045c <GPIO_PeriClockControl+0x1cc>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d105      	bne.n	800042c <GPIO_PeriClockControl+0x19c>
            GPIOI_PCLK_EN();
 8000420:	4b06      	ldr	r3, [pc, #24]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000424:	4a05      	ldr	r2, [pc, #20]	; (800043c <GPIO_PeriClockControl+0x1ac>)
 8000426:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800042a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042c:	bf00      	nop
 800042e:	370c      	adds	r7, #12
 8000430:	46bd      	mov	sp, r7
 8000432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000436:	4770      	bx	lr
 8000438:	40020000 	.word	0x40020000
 800043c:	40023800 	.word	0x40023800
 8000440:	40020400 	.word	0x40020400
 8000444:	40020800 	.word	0x40020800
 8000448:	40020c00 	.word	0x40020c00
 800044c:	40021000 	.word	0x40021000
 8000450:	40021400 	.word	0x40021400
 8000454:	40021800 	.word	0x40021800
 8000458:	40021c00 	.word	0x40021c00
 800045c:	40022000 	.word	0x40022000

08000460 <GPIO_Init>:

/*
    Init and De-Init
*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000460:	b480      	push	{r7}
 8000462:	b085      	sub	sp, #20
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
    uint32_t temp = 0;
 8000468:	2300      	movs	r3, #0
 800046a:	60fb      	str	r3, [r7, #12]

    /* Configure the mode of gpio pin */
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	795b      	ldrb	r3, [r3, #5]
 8000470:	2b03      	cmp	r3, #3
 8000472:	d820      	bhi.n	80004b6 <GPIO_Init+0x56>
    {
        /* We take the GPIO config and pass it into the register */
        temp = ( pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	795b      	ldrb	r3, [r3, #5]
 8000478:	461a      	mov	r2, r3
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	005b      	lsls	r3, r3, #1
 8000480:	fa02 f303 	lsl.w	r3, r2, r3
 8000484:	60fb      	str	r3, [r7, #12]
        pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ); /* Clearing */
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	681a      	ldr	r2, [r3, #0]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	791b      	ldrb	r3, [r3, #4]
 8000490:	4619      	mov	r1, r3
 8000492:	2303      	movs	r3, #3
 8000494:	408b      	lsls	r3, r1
 8000496:	43db      	mvns	r3, r3
 8000498:	4619      	mov	r1, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	400a      	ands	r2, r1
 80004a0:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= temp; /* why ->? */
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	6819      	ldr	r1, [r3, #0]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	68fa      	ldr	r2, [r7, #12]
 80004ae:	430a      	orrs	r2, r1
 80004b0:	601a      	str	r2, [r3, #0]
        temp = 0;
 80004b2:	2300      	movs	r3, #0
 80004b4:	60fb      	str	r3, [r7, #12]
    else
    {
        // later; (interrupt mode)
    }

    temp = 0;
 80004b6:	2300      	movs	r3, #0
 80004b8:	60fb      	str	r3, [r7, #12]

    /* Configure the speed */
    temp = ( pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	799b      	ldrb	r3, [r3, #6]
 80004be:	461a      	mov	r2, r3
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	791b      	ldrb	r3, [r3, #4]
 80004c4:	005b      	lsls	r3, r3, #1
 80004c6:	fa02 f303 	lsl.w	r3, r2, r3
 80004ca:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ); /* Clearing */
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	689a      	ldr	r2, [r3, #8]
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	791b      	ldrb	r3, [r3, #4]
 80004d6:	4619      	mov	r1, r3
 80004d8:	2303      	movs	r3, #3
 80004da:	408b      	lsls	r3, r1
 80004dc:	43db      	mvns	r3, r3
 80004de:	4619      	mov	r1, r3
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	400a      	ands	r2, r1
 80004e6:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	6899      	ldr	r1, [r3, #8]
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	68fa      	ldr	r2, [r7, #12]
 80004f4:	430a      	orrs	r2, r1
 80004f6:	609a      	str	r2, [r3, #8]

    temp = 0;
 80004f8:	2300      	movs	r3, #0
 80004fa:	60fb      	str	r3, [r7, #12]

    /* Configure pupd settings */
    temp = ( pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	79db      	ldrb	r3, [r3, #7]
 8000500:	461a      	mov	r2, r3
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	005b      	lsls	r3, r3, #1
 8000508:	fa02 f303 	lsl.w	r3, r2, r3
 800050c:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ); /* Clearing */
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	68da      	ldr	r2, [r3, #12]
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	791b      	ldrb	r3, [r3, #4]
 8000518:	4619      	mov	r1, r3
 800051a:	2303      	movs	r3, #3
 800051c:	408b      	lsls	r3, r1
 800051e:	43db      	mvns	r3, r3
 8000520:	4619      	mov	r1, r3
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	400a      	ands	r2, r1
 8000528:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= temp;
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	68d9      	ldr	r1, [r3, #12]
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	68fa      	ldr	r2, [r7, #12]
 8000536:	430a      	orrs	r2, r1
 8000538:	60da      	str	r2, [r3, #12]

    temp = 0;
 800053a:	2300      	movs	r3, #0
 800053c:	60fb      	str	r3, [r7, #12]

    /* Configure output type */
    temp = ( pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << ( pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	7a1b      	ldrb	r3, [r3, #8]
 8000542:	461a      	mov	r2, r3
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	791b      	ldrb	r3, [r3, #4]
 8000548:	fa02 f303 	lsl.w	r3, r2, r3
 800054c:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ); /* Clearing */
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	685a      	ldr	r2, [r3, #4]
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	791b      	ldrb	r3, [r3, #4]
 8000558:	4619      	mov	r1, r3
 800055a:	2301      	movs	r3, #1
 800055c:	408b      	lsls	r3, r1
 800055e:	43db      	mvns	r3, r3
 8000560:	4619      	mov	r1, r3
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	400a      	ands	r2, r1
 8000568:	605a      	str	r2, [r3, #4]
    pGPIOHandle->pGPIOx->OTYPER |= temp;
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	6859      	ldr	r1, [r3, #4]
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	68fa      	ldr	r2, [r7, #12]
 8000576:	430a      	orrs	r2, r1
 8000578:	605a      	str	r2, [r3, #4]

    temp = 0;
 800057a:	2300      	movs	r3, #0
 800057c:	60fb      	str	r3, [r7, #12]

    /* Configure the alternate functionality */
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	795b      	ldrb	r3, [r3, #5]
 8000582:	2b02      	cmp	r3, #2
 8000584:	d131      	bne.n	80005ea <GPIO_Init+0x18a>
    {
        uint8_t temp1, temp2;

        temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8; /* Gets which AFR element is being used */
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	08db      	lsrs	r3, r3, #3
 800058c:	72fb      	strb	r3, [r7, #11]
        temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8; /* Gets which pin in the AFR element is being used */
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	f003 0307 	and.w	r3, r3, #7
 8000596:	72bb      	strb	r3, [r7, #10]
        pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << ( 4 * temp2 ) ); /* Clearing */
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	7afa      	ldrb	r2, [r7, #11]
 800059e:	3208      	adds	r2, #8
 80005a0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005a4:	7abb      	ldrb	r3, [r7, #10]
 80005a6:	009b      	lsls	r3, r3, #2
 80005a8:	220f      	movs	r2, #15
 80005aa:	fa02 f303 	lsl.w	r3, r2, r3
 80005ae:	43db      	mvns	r3, r3
 80005b0:	4618      	mov	r0, r3
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	7afa      	ldrb	r2, [r7, #11]
 80005b8:	4001      	ands	r1, r0
 80005ba:	3208      	adds	r2, #8
 80005bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIOHandle->pGPIOx->AFR[temp1] |= ( pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	7afa      	ldrb	r2, [r7, #11]
 80005c6:	3208      	adds	r2, #8
 80005c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	7a5b      	ldrb	r3, [r3, #9]
 80005d0:	461a      	mov	r2, r3
 80005d2:	7abb      	ldrb	r3, [r7, #10]
 80005d4:	009b      	lsls	r3, r3, #2
 80005d6:	fa02 f303 	lsl.w	r3, r2, r3
 80005da:	4618      	mov	r0, r3
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	7afa      	ldrb	r2, [r7, #11]
 80005e2:	4301      	orrs	r1, r0
 80005e4:	3208      	adds	r2, #8
 80005e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }

}
 80005ea:	bf00      	nop
 80005ec:	3714      	adds	r7, #20
 80005ee:	46bd      	mov	sp, r7
 80005f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f4:	4770      	bx	lr

080005f6 <GPIO_ToggleOutputPin>:
{
    pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80005f6:	b480      	push	{r7}
 80005f8:	b083      	sub	sp, #12
 80005fa:	af00      	add	r7, sp, #0
 80005fc:	6078      	str	r0, [r7, #4]
 80005fe:	460b      	mov	r3, r1
 8000600:	70fb      	strb	r3, [r7, #3]
    pGPIOx->ODR ^= (1 << PinNumber);
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	695b      	ldr	r3, [r3, #20]
 8000606:	78fa      	ldrb	r2, [r7, #3]
 8000608:	2101      	movs	r1, #1
 800060a:	fa01 f202 	lsl.w	r2, r1, r2
 800060e:	405a      	eors	r2, r3
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	615a      	str	r2, [r3, #20]
}
 8000614:	bf00      	nop
 8000616:	370c      	adds	r7, #12
 8000618:	46bd      	mov	sp, r7
 800061a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800061e:	4770      	bx	lr

08000620 <__libc_init_array>:
 8000620:	b570      	push	{r4, r5, r6, lr}
 8000622:	4e0d      	ldr	r6, [pc, #52]	; (8000658 <__libc_init_array+0x38>)
 8000624:	4c0d      	ldr	r4, [pc, #52]	; (800065c <__libc_init_array+0x3c>)
 8000626:	1ba4      	subs	r4, r4, r6
 8000628:	10a4      	asrs	r4, r4, #2
 800062a:	2500      	movs	r5, #0
 800062c:	42a5      	cmp	r5, r4
 800062e:	d109      	bne.n	8000644 <__libc_init_array+0x24>
 8000630:	4e0b      	ldr	r6, [pc, #44]	; (8000660 <__libc_init_array+0x40>)
 8000632:	4c0c      	ldr	r4, [pc, #48]	; (8000664 <__libc_init_array+0x44>)
 8000634:	f000 f818 	bl	8000668 <_init>
 8000638:	1ba4      	subs	r4, r4, r6
 800063a:	10a4      	asrs	r4, r4, #2
 800063c:	2500      	movs	r5, #0
 800063e:	42a5      	cmp	r5, r4
 8000640:	d105      	bne.n	800064e <__libc_init_array+0x2e>
 8000642:	bd70      	pop	{r4, r5, r6, pc}
 8000644:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000648:	4798      	blx	r3
 800064a:	3501      	adds	r5, #1
 800064c:	e7ee      	b.n	800062c <__libc_init_array+0xc>
 800064e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000652:	4798      	blx	r3
 8000654:	3501      	adds	r5, #1
 8000656:	e7f2      	b.n	800063e <__libc_init_array+0x1e>
 8000658:	08000680 	.word	0x08000680
 800065c:	08000680 	.word	0x08000680
 8000660:	08000680 	.word	0x08000680
 8000664:	08000684 	.word	0x08000684

08000668 <_init>:
 8000668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800066a:	bf00      	nop
 800066c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800066e:	bc08      	pop	{r3}
 8000670:	469e      	mov	lr, r3
 8000672:	4770      	bx	lr

08000674 <_fini>:
 8000674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000676:	bf00      	nop
 8000678:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067a:	bc08      	pop	{r3}
 800067c:	469e      	mov	lr, r3
 800067e:	4770      	bx	lr
